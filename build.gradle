buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.6.RELEASE")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

group = 'keithj'
version = '0.0.1-SNAPSHOT'

description = """uk.co.keithj.postcodes3"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
        
     maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
    compile group: 'joda-time', name: 'joda-time', version:'2.8.2'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:'1.2.6.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version:'1.2.6.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-aws-context', version:'1.0.2.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws', version:'1.0.3.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-aws-messaging', version:'1.0.2.RELEASE'
    compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.0'
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'org.mockito', name: 'mockito-all', version:'1.10.19'
}

 
task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task copyTask(type: Copy, dependsOn:build) {
	from 'build/libs'
	from 'src/main/docker'
	include '*.jar'
	include 'Dockerfile'
	include 'Dockerrun.aws.json'
	include '.ebignore'
	include 'eb-create-and-deploy.cmd'
	include 'eb-terminate-all.cmd'
	into 'build/docker'
}

task buildDockerZip(type: Zip, dependsOn:copyTask) {
	from 'build/docker'
	include '*.jar'
	include 'Dockerfile'
	include 'Dockerrun.aws.json'
	archiveName baseName + 'Docker.zip'
}
